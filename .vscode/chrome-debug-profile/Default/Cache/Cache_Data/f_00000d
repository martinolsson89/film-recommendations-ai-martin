import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/components/MovieDetails/MovieHeader.tsx");import __vite__cjsImport0_react_jsxDevRuntime from "/node_modules/.vite/deps/react_jsx-dev-runtime.js?v=fe8bc9ef"; const jsxDEV = __vite__cjsImport0_react_jsxDevRuntime["jsxDEV"];
import * as RefreshRuntime from "/@react-refresh";
const inWebWorker = typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope;
let prevRefreshReg;
let prevRefreshSig;
if (import.meta.hot && !inWebWorker) {
  if (!window.$RefreshReg$) {
    throw new Error(
      "@vitejs/plugin-react can't detect preamble. Something is wrong."
    );
  }
  prevRefreshReg = window.$RefreshReg$;
  prevRefreshSig = window.$RefreshSig$;
  window.$RefreshReg$ = RefreshRuntime.getRefreshReg("C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/MovieHeader.tsx");
  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;
}
import __vite__cjsImport3_react from "/node_modules/.vite/deps/react.js?v=fe8bc9ef"; const React = __vite__cjsImport3_react.__esModule ? __vite__cjsImport3_react.default : __vite__cjsImport3_react;
import { movieService } from "/src/services/movieService.ts";
import CastSection from "/src/components/MovieDetails/CastSection.tsx";
import MovieActions from "/src/components/MovieDetails/MovieActions.tsx";
import StreamingProviders from "/src/components/MovieDetails/StreamingProviders.tsx";
const toArray = (input) => Array.isArray(input) ? input : input?.$values ?? [];
const isGenreUpper = (x) => typeof x === "object" && x !== null && "Name" in x && typeof x.Name === "string";
const isGenreLower = (x) => typeof x === "object" && x !== null && "name" in x && typeof x.name === "string";
const genreLabel = (g) => {
  if (isGenreUpper(g)) return g.Name;
  if (isGenreLower(g)) return g.name;
  return "";
};
const isCountry = (x) => typeof x === "object" && x !== null && "name" in x && typeof x.name === "string";
const countryLabel = (c) => isCountry(c) ? c.name : "";
const isDirectorUpper = (x) => typeof x === "object" && x !== null && "Name" in x && typeof x.Name === "string";
const isDirectorLower = (x) => typeof x === "object" && x !== null && "name" in x && typeof x.name === "string";
const directorLabel = (d) => {
  if (isDirectorUpper(d)) return d.Name ?? "";
  if (isDirectorLower(d)) return d.name ?? "";
  return "";
};
const MovieHeader = ({
  movie,
  streamingProviders,
  onActorClick,
  onWatchTrailer,
  onLike,
  onDislike
}) => {
  const backdropStyle = movie.backdrop_path ? {
    backgroundImage: `linear-gradient(to bottom, rgba(0, 0, 0, 0.5) 0%, rgba(0, 0, 0, 0.9) 100%), url(${movieService.getFullImageUrl(movie.backdrop_path)})`,
    backgroundSize: "cover",
    backgroundPosition: "center",
    backgroundRepeat: "no-repeat"
  } : {};
  const formatRuntime = (runtime) => {
    const hours = Math.floor(runtime / 60);
    const minutes = runtime % 60;
    return `${hours}h ${minutes}m`;
  };
  const runtimeValue = movie.Runtime ?? movie.runtime ?? 0;
  return /* @__PURE__ */ jsxDEV(
    "div",
    {
      className: "relative bg-gray-800 text-white p-6",
      style: backdropStyle,
      children: /* @__PURE__ */ jsxDEV("div", { className: "container mx-auto px-4 py-8", children: /* @__PURE__ */ jsxDEV("div", { className: "flex flex-col md:flex-row items-start md:items-start gap-8", children: [
        /* @__PURE__ */ jsxDEV("div", { className: "w-full md:w-1/3 flex justify-center md:justify-start", children: /* @__PURE__ */ jsxDEV(
          "img",
          {
            src: movieService.getImageUrl(movie.poster_path),
            alt: movie.original_title,
            className: "w-4/5 md:w-full max-w-xs rounded-lg shadow-lg",
            onError: (e) => {
              const target = e.target;
              target.src = "/src/assets/default-poster.png";
            }
          },
          void 0,
          false,
          {
            fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/MovieHeader.tsx",
            lineNumber: 101,
            columnNumber: 13
          },
          this
        ) }, void 0, false, {
          fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/MovieHeader.tsx",
          lineNumber: 100,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ jsxDEV("div", { className: "w-full md:w-2/3 flex flex-col gap-4", children: [
          /* @__PURE__ */ jsxDEV("div", { children: [
            /* @__PURE__ */ jsxDEV("p", { className: "mb-2 flex items-center font-bold", children: [
              /* @__PURE__ */ jsxDEV("span", { children: movie.vote_average.toString().substring(0, 3) }, void 0, false, {
                fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/MovieHeader.tsx",
                lineNumber: 117,
                columnNumber: 17
              }, this),
              /* @__PURE__ */ jsxDEV("svg", { className: "w-3 h-3 ml-1 fill-yellow-400", viewBox: "0 0 20 20", children: /* @__PURE__ */ jsxDEV("path", { d: "M10 15l-5.878 3.09 1.123-6.545L.489 6.91l6.572-.955L10 0l2.939 5.955 6.572.955-4.756 4.635 1.123 6.545z" }, void 0, false, {
                fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/MovieHeader.tsx",
                lineNumber: 119,
                columnNumber: 19
              }, this) }, void 0, false, {
                fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/MovieHeader.tsx",
                lineNumber: 118,
                columnNumber: 17
              }, this)
            ] }, void 0, true, {
              fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/MovieHeader.tsx",
              lineNumber: 116,
              columnNumber: 15
            }, this),
            /* @__PURE__ */ jsxDEV("h2", { className: "text-3xl font-bold mb-4", children: [
              movie.original_title,
              " (",
              movie.release_date.substring(0, 4),
              ")"
            ] }, void 0, true, {
              fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/MovieHeader.tsx",
              lineNumber: 124,
              columnNumber: 15
            }, this),
            /* @__PURE__ */ jsxDEV("div", { className: "mb-4 flex flex-wrap gap-2", children: (() => {
              const genres = toArray(movie.genres);
              const names = genres.map(genreLabel).filter(Boolean);
              return names.length > 0 ? names.map(
                (name, index) => /* @__PURE__ */ jsxDEV(
                  "span",
                  {
                    className: "px-3 py-1 rounded-full bg-white/20 dark:bg-white/10 text-white text-sm font-medium",
                    children: name
                  },
                  index,
                  false,
                  {
                    fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/MovieHeader.tsx",
                    lineNumber: 135,
                    columnNumber: 19
                  },
                  this
                )
              ) : /* @__PURE__ */ jsxDEV("span", { className: "px-3 py-1 rounded-full bg-white/20 dark:bg-white/10 text-white text-sm font-medium", children: "N/A" }, void 0, false, {
                fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/MovieHeader.tsx",
                lineNumber: 142,
                columnNumber: 19
              }, this);
            })() }, void 0, false, {
              fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/MovieHeader.tsx",
              lineNumber: 129,
              columnNumber: 15
            }, this),
            /* @__PURE__ */ jsxDEV("p", { className: "mb-4", children: movie.overview }, void 0, false, {
              fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/MovieHeader.tsx",
              lineNumber: 147,
              columnNumber: 15
            }, this),
            /* @__PURE__ */ jsxDEV("p", { className: "mb-2", children: [
              /* @__PURE__ */ jsxDEV("span", { className: "font-semibold", children: "Length:" }, void 0, false, {
                fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/MovieHeader.tsx",
                lineNumber: 151,
                columnNumber: 17
              }, this),
              " ",
              formatRuntime(runtimeValue)
            ] }, void 0, true, {
              fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/MovieHeader.tsx",
              lineNumber: 150,
              columnNumber: 15
            }, this),
            /* @__PURE__ */ jsxDEV("p", { className: "mb-2", children: [
              /* @__PURE__ */ jsxDEV("span", { className: "font-semibold", children: "Country:" }, void 0, false, {
                fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/MovieHeader.tsx",
                lineNumber: 156,
                columnNumber: 17
              }, this),
              " ",
              (() => {
                const countries = toArray(movie.production_countries);
                const names = countries.map(countryLabel).filter(Boolean);
                return names.length > 0 ? names.join(", ") : "N/A";
              })()
            ] }, void 0, true, {
              fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/MovieHeader.tsx",
              lineNumber: 155,
              columnNumber: 15
            }, this),
            /* @__PURE__ */ jsxDEV("p", { className: "mb-2", children: [
              /* @__PURE__ */ jsxDEV("span", { className: "font-semibold", children: "Director:" }, void 0, false, {
                fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/MovieHeader.tsx",
                lineNumber: 167,
                columnNumber: 17
              }, this),
              " ",
              (() => {
                const directorsSource = movie.Directors ?? movie.directors;
                const directors = toArray(directorsSource);
                const names = directors.map(directorLabel).filter(Boolean);
                return names.length > 0 ? names.join(", ") : "N/A";
              })()
            ] }, void 0, true, {
              fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/MovieHeader.tsx",
              lineNumber: 166,
              columnNumber: 15
            }, this)
          ] }, void 0, true, {
            fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/MovieHeader.tsx",
            lineNumber: 114,
            columnNumber: 13
          }, this),
          /* @__PURE__ */ jsxDEV(
            CastSection,
            {
              actors: (() => {
                const src = movie.Actors ?? movie.actors;
                return src ?? { $values: [] };
              })(),
              onActorClick
            },
            void 0,
            false,
            {
              fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/MovieHeader.tsx",
              lineNumber: 180,
              columnNumber: 13
            },
            this
          ),
          /* @__PURE__ */ jsxDEV(
            MovieActions,
            {
              movie,
              onWatchTrailer,
              onLike,
              onDislike
            },
            void 0,
            false,
            {
              fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/MovieHeader.tsx",
              lineNumber: 192,
              columnNumber: 13
            },
            this
          ),
          /* @__PURE__ */ jsxDEV("hr", { className: "border-t border-gray-700" }, void 0, false, {
            fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/MovieHeader.tsx",
            lineNumber: 199,
            columnNumber: 13
          }, this),
          /* @__PURE__ */ jsxDEV(
            StreamingProviders,
            {
              movieTitle: movie.original_title,
              providers: streamingProviders
            },
            void 0,
            false,
            {
              fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/MovieHeader.tsx",
              lineNumber: 202,
              columnNumber: 13
            },
            this
          )
        ] }, void 0, true, {
          fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/MovieHeader.tsx",
          lineNumber: 113,
          columnNumber: 11
        }, this)
      ] }, void 0, true, {
        fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/MovieHeader.tsx",
        lineNumber: 98,
        columnNumber: 9
      }, this) }, void 0, false, {
        fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/MovieHeader.tsx",
        lineNumber: 97,
        columnNumber: 7
      }, this)
    },
    void 0,
    false,
    {
      fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/MovieHeader.tsx",
      lineNumber: 93,
      columnNumber: 5
    },
    this
  );
};
_c = MovieHeader;
export default MovieHeader;
var _c;
$RefreshReg$(_c, "MovieHeader");
if (import.meta.hot && !inWebWorker) {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
if (import.meta.hot && !inWebWorker) {
  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
    RefreshRuntime.registerExportsForReactRefresh("C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/MovieHeader.tsx", currentExports);
    import.meta.hot.accept((nextExports) => {
      if (!nextExports) return;
      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/MovieHeader.tsx", currentExports, nextExports);
      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
    });
  });
}

//# sourceMappingURL=data:application/json;base64,