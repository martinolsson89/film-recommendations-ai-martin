import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/components/RegisterModal.tsx");import __vite__cjsImport0_react_jsxDevRuntime from "/node_modules/.vite/deps/react_jsx-dev-runtime.js?v=fe8bc9ef"; const jsxDEV = __vite__cjsImport0_react_jsxDevRuntime["jsxDEV"];
import * as RefreshRuntime from "/@react-refresh";
const inWebWorker = typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope;
let prevRefreshReg;
let prevRefreshSig;
if (import.meta.hot && !inWebWorker) {
  if (!window.$RefreshReg$) {
    throw new Error(
      "@vitejs/plugin-react can't detect preamble. Something is wrong."
    );
  }
  prevRefreshReg = window.$RefreshReg$;
  prevRefreshSig = window.$RefreshSig$;
  window.$RefreshReg$ = RefreshRuntime.getRefreshReg("C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/RegisterModal.tsx");
  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;
}
var _s = $RefreshSig$();
import __vite__cjsImport3_react from "/node_modules/.vite/deps/react.js?v=fe8bc9ef"; const React = __vite__cjsImport3_react.__esModule ? __vite__cjsImport3_react.default : __vite__cjsImport3_react; const useState = __vite__cjsImport3_react["useState"]; const useEffect = __vite__cjsImport3_react["useEffect"];
import { useAppDispatch } from "/src/hooks/useAppDispatch.ts";
import { useAppSelector } from "/src/hooks/useAppSelector.ts";
import Modal from "/src/components/Modal.tsx";
import { registerUser, clearError } from "/src/features/auth/authSlice.ts";
const RegisterModal = ({ isOpen, onClose, onSwitchToLogin }) => {
  _s();
  const dispatch = useAppDispatch();
  const { loading, error, isAuthenticated } = useAppSelector((state) => state.auth);
  const [formData, setFormData] = useState({
    userName: "",
    email: "",
    password: "",
    confirmPassword: ""
  });
  const [validationErrors, setValidationErrors] = useState({});
  useEffect(() => {
    if (isAuthenticated) {
      onClose();
      setFormData({ userName: "", email: "", password: "", confirmPassword: "" });
      setValidationErrors({});
    }
  }, [isAuthenticated, onClose]);
  useEffect(() => {
    if (isOpen) {
      dispatch(clearError());
    }
  }, [isOpen, dispatch]);
  const validateForm = () => {
    const errors = {};
    if (!formData.userName.trim()) {
      errors.userName = "Username is required";
    } else if (formData.userName.trim().length < 3) {
      errors.userName = "Username must be at least 3 characters";
    }
    if (!formData.email.trim()) {
      errors.email = "Email is required";
    } else if (!/\S+@\S+\.\S+/.test(formData.email)) {
      errors.email = "Please enter a valid email";
    }
    if (!formData.password) {
      errors.password = "Password is required";
    } else if (formData.password.length < 6) {
      errors.password = "Password must be at least 6 characters";
    }
    if (formData.password !== formData.confirmPassword) {
      errors.confirmPassword = "Passwords do not match";
    }
    setValidationErrors(errors);
    return Object.keys(errors).length === 0;
  };
  const handleSubmit = async (e) => {
    e.preventDefault();
    if (!validateForm()) {
      return;
    }
    const registerData = {
      userName: formData.userName,
      email: formData.email,
      password: formData.password
    };
    dispatch(registerUser(registerData));
  };
  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData((prev) => ({ ...prev, [name]: value }));
    if (validationErrors[name]) {
      setValidationErrors((prev) => ({ ...prev, [name]: void 0 }));
    }
  };
  const handleClose = () => {
    onClose();
    setFormData({ userName: "", email: "", password: "", confirmPassword: "" });
    setValidationErrors({});
    dispatch(clearError());
  };
  return /* @__PURE__ */ jsxDEV(Modal, { isOpen, onClose: handleClose, title: "Sign Up", children: /* @__PURE__ */ jsxDEV("form", { onSubmit: handleSubmit, className: "space-y-4", children: [
    error && /* @__PURE__ */ jsxDEV("div", { className: "bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-md p-3", children: /* @__PURE__ */ jsxDEV("p", { className: "text-red-600 dark:text-red-400 text-sm", children: error }, void 0, false, {
      fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/RegisterModal.tsx",
      lineNumber: 127,
      columnNumber: 13
    }, this) }, void 0, false, {
      fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/RegisterModal.tsx",
      lineNumber: 126,
      columnNumber: 9
    }, this),
    /* @__PURE__ */ jsxDEV("div", { children: [
      /* @__PURE__ */ jsxDEV("label", { htmlFor: "userName", className: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1", children: "Username" }, void 0, false, {
        fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/RegisterModal.tsx",
        lineNumber: 132,
        columnNumber: 11
      }, this),
      /* @__PURE__ */ jsxDEV(
        "input",
        {
          type: "text",
          id: "userName",
          name: "userName",
          value: formData.userName,
          onChange: handleInputChange,
          className: `w-full px-3 py-2 border rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500 ${validationErrors.userName ? "border-red-300 dark:border-red-600" : "border-gray-300 dark:border-gray-600"}`,
          placeholder: "Choose a username",
          disabled: loading
        },
        void 0,
        false,
        {
          fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/RegisterModal.tsx",
          lineNumber: 135,
          columnNumber: 11
        },
        this
      ),
      validationErrors.userName && /* @__PURE__ */ jsxDEV("p", { className: "text-red-500 text-sm mt-1", children: validationErrors.userName }, void 0, false, {
        fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/RegisterModal.tsx",
        lineNumber: 150,
        columnNumber: 11
      }, this)
    ] }, void 0, true, {
      fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/RegisterModal.tsx",
      lineNumber: 131,
      columnNumber: 9
    }, this),
    /* @__PURE__ */ jsxDEV("div", { children: [
      /* @__PURE__ */ jsxDEV("label", { htmlFor: "email", className: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1", children: "Email" }, void 0, false, {
        fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/RegisterModal.tsx",
        lineNumber: 155,
        columnNumber: 11
      }, this),
      /* @__PURE__ */ jsxDEV(
        "input",
        {
          type: "email",
          id: "email",
          name: "email",
          value: formData.email,
          onChange: handleInputChange,
          className: `w-full px-3 py-2 border rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500 ${validationErrors.email ? "border-red-300 dark:border-red-600" : "border-gray-300 dark:border-gray-600"}`,
          placeholder: "Enter your email",
          disabled: loading
        },
        void 0,
        false,
        {
          fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/RegisterModal.tsx",
          lineNumber: 158,
          columnNumber: 11
        },
        this
      ),
      validationErrors.email && /* @__PURE__ */ jsxDEV("p", { className: "text-red-500 text-sm mt-1", children: validationErrors.email }, void 0, false, {
        fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/RegisterModal.tsx",
        lineNumber: 173,
        columnNumber: 11
      }, this)
    ] }, void 0, true, {
      fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/RegisterModal.tsx",
      lineNumber: 154,
      columnNumber: 9
    }, this),
    /* @__PURE__ */ jsxDEV("div", { children: [
      /* @__PURE__ */ jsxDEV("label", { htmlFor: "password", className: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1", children: "Password" }, void 0, false, {
        fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/RegisterModal.tsx",
        lineNumber: 178,
        columnNumber: 11
      }, this),
      /* @__PURE__ */ jsxDEV(
        "input",
        {
          type: "password",
          id: "password",
          name: "password",
          value: formData.password,
          onChange: handleInputChange,
          className: `w-full px-3 py-2 border rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500 ${validationErrors.password ? "border-red-300 dark:border-red-600" : "border-gray-300 dark:border-gray-600"}`,
          placeholder: "Create a password",
          disabled: loading
        },
        void 0,
        false,
        {
          fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/RegisterModal.tsx",
          lineNumber: 181,
          columnNumber: 11
        },
        this
      ),
      validationErrors.password && /* @__PURE__ */ jsxDEV("p", { className: "text-red-500 text-sm mt-1", children: validationErrors.password }, void 0, false, {
        fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/RegisterModal.tsx",
        lineNumber: 196,
        columnNumber: 11
      }, this)
    ] }, void 0, true, {
      fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/RegisterModal.tsx",
      lineNumber: 177,
      columnNumber: 9
    }, this),
    /* @__PURE__ */ jsxDEV("div", { children: [
      /* @__PURE__ */ jsxDEV("label", { htmlFor: "confirmPassword", className: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1", children: "Confirm Password" }, void 0, false, {
        fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/RegisterModal.tsx",
        lineNumber: 201,
        columnNumber: 11
      }, this),
      /* @__PURE__ */ jsxDEV(
        "input",
        {
          type: "password",
          id: "confirmPassword",
          name: "confirmPassword",
          value: formData.confirmPassword,
          onChange: handleInputChange,
          className: `w-full px-3 py-2 border rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500 ${validationErrors.confirmPassword ? "border-red-300 dark:border-red-600" : "border-gray-300 dark:border-gray-600"}`,
          placeholder: "Confirm your password",
          disabled: loading
        },
        void 0,
        false,
        {
          fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/RegisterModal.tsx",
          lineNumber: 204,
          columnNumber: 11
        },
        this
      ),
      validationErrors.confirmPassword && /* @__PURE__ */ jsxDEV("p", { className: "text-red-500 text-sm mt-1", children: validationErrors.confirmPassword }, void 0, false, {
        fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/RegisterModal.tsx",
        lineNumber: 219,
        columnNumber: 11
      }, this)
    ] }, void 0, true, {
      fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/RegisterModal.tsx",
      lineNumber: 200,
      columnNumber: 9
    }, this),
    /* @__PURE__ */ jsxDEV(
      "button",
      {
        type: "submit",
        disabled: loading,
        className: "w-full bg-blue-500 hover:bg-blue-600 dark:bg-blue-600 dark:hover:bg-blue-700 text-white py-2 px-4 rounded-md transition-colors disabled:opacity-50 disabled:cursor-not-allowed",
        children: loading ? "Creating account..." : "Sign Up"
      },
      void 0,
      false,
      {
        fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/RegisterModal.tsx",
        lineNumber: 223,
        columnNumber: 9
      },
      this
    ),
    /* @__PURE__ */ jsxDEV("div", { className: "text-center pt-4 border-t border-gray-200 dark:border-gray-700", children: /* @__PURE__ */ jsxDEV("p", { className: "text-gray-600 dark:text-gray-400 text-sm", children: [
      "Already have an account?",
      " ",
      /* @__PURE__ */ jsxDEV(
        "button",
        {
          type: "button",
          onClick: onSwitchToLogin,
          className: "text-blue-500 hover:text-blue-600 dark:text-blue-400 dark:hover:text-blue-300 font-medium",
          disabled: loading,
          children: "Sign in"
        },
        void 0,
        false,
        {
          fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/RegisterModal.tsx",
          lineNumber: 234,
          columnNumber: 13
        },
        this
      )
    ] }, void 0, true, {
      fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/RegisterModal.tsx",
      lineNumber: 232,
      columnNumber: 11
    }, this) }, void 0, false, {
      fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/RegisterModal.tsx",
      lineNumber: 231,
      columnNumber: 9
    }, this)
  ] }, void 0, true, {
    fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/RegisterModal.tsx",
    lineNumber: 124,
    columnNumber: 7
  }, this) }, void 0, false, {
    fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/RegisterModal.tsx",
    lineNumber: 123,
    columnNumber: 5
  }, this);
};
_s(RegisterModal, "TQqtK4U7D8lmoFbqE1TOpxNpqHQ=", false, function() {
  return [useAppDispatch, useAppSelector];
});
_c = RegisterModal;
export default RegisterModal;
var _c;
$RefreshReg$(_c, "RegisterModal");
if (import.meta.hot && !inWebWorker) {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
if (import.meta.hot && !inWebWorker) {
  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
    RefreshRuntime.registerExportsForReactRefresh("C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/RegisterModal.tsx", currentExports);
    import.meta.hot.accept((nextExports) => {
      if (!nextExports) return;
      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/RegisterModal.tsx", currentExports, nextExports);
      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
    });
  });
}

//# sourceMappingURL=data:application/json;base64,