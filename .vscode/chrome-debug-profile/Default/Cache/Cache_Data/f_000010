import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/components/MovieDetails/StreamingProviders.tsx");import __vite__cjsImport0_react_jsxDevRuntime from "/node_modules/.vite/deps/react_jsx-dev-runtime.js?v=fe8bc9ef"; const jsxDEV = __vite__cjsImport0_react_jsxDevRuntime["jsxDEV"];
import * as RefreshRuntime from "/@react-refresh";
const inWebWorker = typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope;
let prevRefreshReg;
let prevRefreshSig;
if (import.meta.hot && !inWebWorker) {
  if (!window.$RefreshReg$) {
    throw new Error(
      "@vitejs/plugin-react can't detect preamble. Something is wrong."
    );
  }
  prevRefreshReg = window.$RefreshReg$;
  prevRefreshSig = window.$RefreshSig$;
  window.$RefreshReg$ = RefreshRuntime.getRefreshReg("C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/StreamingProviders.tsx");
  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;
}
var _s = $RefreshSig$();
import __vite__cjsImport3_react from "/node_modules/.vite/deps/react.js?v=fe8bc9ef"; const React = __vite__cjsImport3_react.__esModule ? __vite__cjsImport3_react.default : __vite__cjsImport3_react; const useMemo = __vite__cjsImport3_react["useMemo"]; const useState = __vite__cjsImport3_react["useState"];
const toArray = (input) => Array.isArray(input) ? input : input?.$values ?? [];
const hasValuesArray = (obj) => typeof obj === "object" && obj !== null && Array.isArray(obj.$values);
const getProviderId = (p) => {
  const anyP = p;
  return anyP?.ProviderId ?? anyP?.providerId ?? 0;
};
const getProviderName = (p) => {
  const anyP = p;
  return anyP?.ProviderName ?? anyP?.providerName ?? "";
};
const getProviderLogoUrl = (p) => {
  const anyP = p;
  const url = anyP?.LogoUrl ?? anyP?.logoUrl ?? "";
  const path = anyP?.LogoPath ?? anyP?.logoPath ?? "";
  return url || (path ? `https://image.tmdb.org/t/p/original${path}` : void 0);
};
const getCountryEntry = (results, region) => {
  if (!results) return null;
  if (hasValuesArray(results)) {
    const found = results.$values?.find((kv) => kv.Key === region);
    return found?.Value ?? null;
  }
  const rec = results;
  return rec[region] ?? null;
};
const pickProviders = (country, kind) => {
  if (!country) return [];
  const candidate = country[kind] ?? country[kind.charAt(0).toUpperCase() + kind.slice(1)];
  return toArray(candidate);
};
const StreamingProviders = ({ movieTitle, providers }) => {
  _s();
  const [isOpen, setIsOpen] = useState(false);
  const shortenProviderName = (name) => {
    const nameMap = {
      "Amazon Prime Video": "Amazon Prime",
      "Google Play Movies": "Google Play",
      "Apple TV Plus": "Apple TV+",
      "Apple TV": "Apple TV",
      "YouTube Premium": "YouTube",
      "Disney Plus": "Disney+",
      "HBO Max": "HBO Max"
    };
    return nameMap[name] || name;
  };
  const results = useMemo(() => {
    if (!providers) return void 0;
    const r = providers.Results ?? providers.results;
    return r;
  }, [providers]);
  const { subscriptionProviders, rentProviders, buyProviders } = useMemo(() => {
    const entry = getCountryEntry(results, "SE");
    const sub = pickProviders(entry, "flatrate");
    const rent = pickProviders(entry, "rent");
    const buy = pickProviders(entry, "buy");
    return { subscriptionProviders: sub, rentProviders: rent, buyProviders: buy };
  }, [results]);
  const rentBuyCombined = useMemo(() => {
    const map = /* @__PURE__ */ new Map();
    [...rentProviders, ...buyProviders].forEach((p) => {
      const id = getProviderId(p);
      if (!map.has(id)) map.set(id, p);
    });
    return Array.from(map.values());
  }, [rentProviders, buyProviders]);
  return /* @__PURE__ */ jsxDEV("details", { className: "group cursor-pointer hover", open: isOpen, onToggle: (e) => setIsOpen(e.target.open), children: [
    /* @__PURE__ */ jsxDEV("summary", { className: "text-l font-bold cursor-pointertext-white", children: [
      "Where can I watch ",
      movieTitle,
      "?"
    ] }, void 0, true, {
      fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/StreamingProviders.tsx",
      lineNumber: 125,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ jsxDEV("div", { className: `overflow-hidden transition-all duration-300 ${isOpen ? "max-h-96 mt-4" : "max-h-0"}`, children: !providers || !subscriptionProviders.length && !rentProviders.length && !buyProviders.length ? /* @__PURE__ */ jsxDEV("p", { className: "mt-2text-white", children: "No streaming options available at this time." }, void 0, false, {
      fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/StreamingProviders.tsx",
      lineNumber: 131,
      columnNumber: 9
    }, this) : /* @__PURE__ */ jsxDEV("div", { children: [
      subscriptionProviders.length > 0 && /* @__PURE__ */ jsxDEV("div", { className: "mb-4", children: [
        /* @__PURE__ */ jsxDEV("h3", { className: "text-white text-lg font-semibold mb-2", children: "Subscription" }, void 0, false, {
          fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/StreamingProviders.tsx",
          lineNumber: 136,
          columnNumber: 17
        }, this),
        /* @__PURE__ */ jsxDEV("div", { className: "flex flex-wrap gap-3", children: subscriptionProviders.map(
          (provider) => /* @__PURE__ */ jsxDEV("div", { className: "flex flex-col items-center", children: [
            /* @__PURE__ */ jsxDEV(
              "img",
              {
                src: getProviderLogoUrl(provider) || "",
                alt: getProviderName(provider),
                className: "w-12 h-12 rounded-lg shadow",
                title: getProviderName(provider)
              },
              void 0,
              false,
              {
                fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/StreamingProviders.tsx",
                lineNumber: 140,
                columnNumber: 23
              },
              this
            ),
            /* @__PURE__ */ jsxDEV("span", { className: "text-xs mt-1 text-white", children: shortenProviderName(getProviderName(provider)) }, void 0, false, {
              fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/StreamingProviders.tsx",
              lineNumber: 146,
              columnNumber: 23
            }, this)
          ] }, getProviderId(provider), true, {
            fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/StreamingProviders.tsx",
            lineNumber: 139,
            columnNumber: 15
          }, this)
        ) }, void 0, false, {
          fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/StreamingProviders.tsx",
          lineNumber: 137,
          columnNumber: 17
        }, this)
      ] }, void 0, true, {
        fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/StreamingProviders.tsx",
        lineNumber: 135,
        columnNumber: 11
      }, this),
      rentBuyCombined.length > 0 && /* @__PURE__ */ jsxDEV("div", { className: "mb-4", children: [
        /* @__PURE__ */ jsxDEV("h3", { className: "text-white text-lg font-semibold mb-2", children: "Rent/Buy" }, void 0, false, {
          fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/StreamingProviders.tsx",
          lineNumber: 155,
          columnNumber: 17
        }, this),
        /* @__PURE__ */ jsxDEV("div", { className: "flex flex-wrap gap-3", children: rentBuyCombined.map(
          (provider) => /* @__PURE__ */ jsxDEV("div", { className: "flex flex-col items-center", children: [
            /* @__PURE__ */ jsxDEV(
              "img",
              {
                src: getProviderLogoUrl(provider) || "",
                alt: getProviderName(provider),
                className: "w-12 h-12 rounded-lg shadow",
                title: getProviderName(provider)
              },
              void 0,
              false,
              {
                fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/StreamingProviders.tsx",
                lineNumber: 159,
                columnNumber: 23
              },
              this
            ),
            /* @__PURE__ */ jsxDEV("span", { className: "text-xs mt-1 text-white", children: shortenProviderName(getProviderName(provider)) }, void 0, false, {
              fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/StreamingProviders.tsx",
              lineNumber: 165,
              columnNumber: 23
            }, this)
          ] }, getProviderId(provider), true, {
            fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/StreamingProviders.tsx",
            lineNumber: 158,
            columnNumber: 15
          }, this)
        ) }, void 0, false, {
          fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/StreamingProviders.tsx",
          lineNumber: 156,
          columnNumber: 17
        }, this)
      ] }, void 0, true, {
        fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/StreamingProviders.tsx",
        lineNumber: 154,
        columnNumber: 11
      }, this)
    ] }, void 0, true, {
      fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/StreamingProviders.tsx",
      lineNumber: 133,
      columnNumber: 9
    }, this) }, void 0, false, {
      fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/StreamingProviders.tsx",
      lineNumber: 128,
      columnNumber: 7
    }, this)
  ] }, void 0, true, {
    fileName: "C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/StreamingProviders.tsx",
    lineNumber: 124,
    columnNumber: 5
  }, this);
};
_s(StreamingProviders, "FONTUdWLZxfMz0dnDe2bPKIL20s=");
_c = StreamingProviders;
export default StreamingProviders;
var _c;
$RefreshReg$(_c, "StreamingProviders");
if (import.meta.hot && !inWebWorker) {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
if (import.meta.hot && !inWebWorker) {
  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
    RefreshRuntime.registerExportsForReactRefresh("C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/StreamingProviders.tsx", currentExports);
    import.meta.hot.accept((nextExports) => {
      if (!nextExports) return;
      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("C:/Users/marti/Development/Projects/film-recommendations-ai-martin/filmrecommendations-react-frontend/src/components/MovieDetails/StreamingProviders.tsx", currentExports, nextExports);
      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
    });
  });
}

//# sourceMappingURL=data:application/json;base64,